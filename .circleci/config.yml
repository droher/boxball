# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1


jobs:
    style:
      docker:
        - image: circleci/python:3.7.3-stretch
      steps:
        - checkout
        - run: |
            sudo pip install flake8==3.7.7
            flake8

    int-test:
      docker:
        - image: circleci/python:3.7.3-stretch
      steps:
        - checkout
        - run: |
            sudo pip install -r requirements.txt
            pytest --cov
            coverage xml
            python-codacy-coverage -r coverage.xml


    e2e-test:
      docker:
        - image: circleci/buildpack-deps:trusty
      steps:
        - checkout
        - setup_remote_docker:
            docker_layer_caching: true
            version: 18.06.0-ce
        - run:
            environment:
                BUILD_ENV: test
            command: |
              docker-compose up -d
              sleep 60s
              total_exits=$(docker-compose ps -q | wc -l)
              clean_exits=$(docker-compose ps -q | xargs docker inspect -f '{{ .State.ExitCode }}' | grep -c 0)
              echo "Total containers: ${total_exits} Clean exits: ${clean_exits}"
              ((${clean_exits}==${total_exits})) || (echo "At least one container had a non-zero exit" && exit 1);


# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  test:
    jobs:
      - style
      - int-test:
          requires:
            - style
      - e2e-test:
          requires:
            - int-test